// const API_KEY = "AIzaSyDsxGNUwgkfOzkaQMq7BuVCoVtFOcmgNGM";
const API_KEY = "AIzaSyCnFR2WTi6zu3YSvAmJMLLwOh4lBDxZqig";

const data = {
  contents: [
    {
      parts: [
        {
          text: `I'm sending you list of words, give me their meaning with example in gujrati language. 
          Learn, Walk, Talk, Recognize, Listen, Gesture, Effective, Often, scholar, Synchronize, Subtle, Immersive, Gentleman, Vivid, Floral, Fantasy, Zen, Lullaby 
          `,
        },
      ],
    },
  ],
};
async function testAPI() {
  const response = await fetch(
    `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${API_KEY}`,
    {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    }
  );

  const result = await response.json();
  console.log(result);
  console.log(result.candidates[0].content.parts[0].text);
}

// testAPI();

// const fetch = require('node-fetch'); // Install: npm install node-fetch

async function fetchYouTubeCaptions(videoId, apiKey) {
  try {
    // Step 1: Fetch Captions List using YouTube API
    let captionsListUrl = `https://www.googleapis.com/youtube/v3/captions?part=snippet&videoId=${videoId}&key=${apiKey}`;
    let response = await fetch(captionsListUrl);
    let data = await response.json();

    if (data.items && data.items.length > 0) {
      let captionId = data.items[0].id; // Picking the first available caption
      let captionsUrl = `https://www.googleapis.com/youtube/v3/captions/${captionId}?tfmt=srt&key=${apiKey}`;

      let captionResponse = await fetch(captionsUrl, {
        headers: { Accept: "application/srt" },
      });
      let captionsText = await captionResponse.text();
      console.log("Official Captions:\n", captionsText);
      return captionsText;
    } else {
      console.log(
        "No official captions found, trying auto-generated captions..."
      );
      return await fetchAutoGeneratedCaptions(videoId);
    }
  } catch (error) {
    console.error("Error fetching captions:", error);
    return null;
  }
}

// Fetch Auto-generated Captions (Direct Scraping)
async function fetchAutoGeneratedCaptions(videoId) {
  try {
    let ytUrl = `https://www.youtube.com/watch?v=${videoId}`;
    let response = await fetch(ytUrl);
    let html = await response.text();

    let regex = /"captionTracks":\[(.*?)\]/;
    let match = html.match(regex);

    if (match && match[1]) {
      let captionTracks = JSON.parse(`[${match[1]}]`);
      let englishCaption =
        captionTracks.find((track) => track.languageCode === "en") ||
        captionTracks[0];

      if (englishCaption) {
        let captionsResponse = await fetch(englishCaption.baseUrl);
        let xmlText = await captionsResponse.text();

        // Convert XML Captions to Plain Text
        let parsedCaptions = xmlText
          .replace(/<\/?text[^>]*>/g, "\n") // Remove text tags
          .replace(/&amp;/g, "&") // Convert HTML entities
          .replace(/&#39;/g, "'")
          .replace(/&quot;/g, '"');

        console.log("Auto-Generated Captions:\n", parsedCaptions);
        console.log(parsedCaptions);

        return parsedCaptions;
      }
    } else {
      console.log("No auto-generated captions found.");
    }
  } catch (error) {
    console.error("Error fetching auto-generated captions:", error);
  }
  return null;
}

// Example Usage:
const YOUTUBE_API_KEY = "AIzaSyDhTPVO-bQKxPxAUU71JQE7dmFgnK_6UFI"; // Replace with your API Key
const VIDEO_ID = "YOUR_VIDEO_ID"; // Replace with the Video ID

const apiKey = "AIzaSyDhTPVO-bQKxPxAUU71JQE7dmFgnK_6UFI"; // Store API key in environment variable
const videoId = "9ofL45Mrzj0"; // Replace with the actual video ID

fetchYouTubeCaptions("P_fHJIYENdI", YOUTUBE_API_KEY);

// getAutoGeneratedSubtitles("K381EkDpUKw");
